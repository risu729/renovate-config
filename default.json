{
	"$schema": "https://docs.renovatebot.com/renovate-schema.json",
	"extends": [
		"config:best-practices",
		":pinVersions",
		":automergeMinor",
		":automergeDigest",
		":prHourlyLimitNone",
		":prConcurrentLimitNone",
		"customManagers:biomeVersions"
	],
	"ignorePresets": [
		":ignoreModulesAndTests"
	],
	"bun": {
		"ignorePaths": [
			"**/node_modules/**",
			"**/bun.lockb"
		]
	},
	"labels": [
		"dependencies",
		"{{#unless (or (equals manager 'regex') (equals manager 'jsonata'))}}{{manager}}{{/unless}}"
	],
	"customManagers": [
		{
			"customType": "jsonata",
			"description": "Updates mise tools (shorthands)",
			"managerFilePatterns": [
				"/(^|/)\\.?mise\\.toml$/",
				"/(^|/)\\.?mise/config\\.toml$/"
			],
			"fileFormat": "toml",
			"datasourceTemplate": "undefined",
			"matchStrings": [
				"$each($.tools, function($v, $k) { $contains($k, \":\") ? undefined : { \"depName\": $k, \"currentValue\": $v } })"
			]
		},
		{
			"customType": "jsonata",
			"description": "Updates min_version in mise config",
			"managerFilePatterns": [
				"/(^|/)\\.?mise\\.toml$/",
				"/(^|/)\\.?mise/config\\.toml$/"
			],
			"fileFormat": "toml",
			"datasourceTemplate": "github-releases",
			"depNameTemplate": "mise",
			"packageNameTemplate": "jdx/mise",
			"matchStrings": [
				"{ \"currentValue\": $.min_version }"
			]
		},
		{
			"customType": "jsonata",
			"description": "Updates mise versions in GitHub Actions",
			"managerFilePatterns": [
				"/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml$/",
				"/(^|/)action\\.ya?ml$/"
			],
			"fileFormat": "yaml",
			"datasourceTemplate": "github-releases",
			"depNameTemplate": "mise",
			"packageNameTemplate": "jdx/mise",
			"matchStrings": [
				"$.jobs.*.steps[$substringBefore(uses, \"@\") = \"jdx/mise-action\"].with.version.{ \"currentValue\": $ }"
			]
		},
		{
			"customType": "jsonata",
			"description": "Updates compatibility_date in wrangler.json",
			"managerFilePatterns": [
				"/(^|/)wrangler\\.jsonc?$/"
			],
			"fileFormat": "json",
			"datasourceTemplate": "custom.wrangler-compatibility-date",
			"depNameTemplate": "compatibility_date",
			"versioningTemplate": "regex:^(?<minor>[0-9]{4})-(?<patch>[0-9]{2})-(?<build>[0-9]{2})$",
			"matchStrings": [
				"{ \"currentValue\": compatibility_date }"
			]
		},
		{
			"customType": "jsonata",
			"description": "Updates compatibility_date in wrangler.toml",
			"managerFilePatterns": [
				"/(^|/)wrangler\\.toml$/"
			],
			"fileFormat": "toml",
			"datasourceTemplate": "custom.wrangler-compatibility-date",
			"depNameTemplate": "compatibility_date",
			"versioningTemplate": "regex:^(?<minor>[0-9]{4})-(?<patch>[0-9]{2})-(?<build>[0-9]{2})$",
			"matchStrings": [
				"{ \"currentValue\": compatibility_date }"
			]
		}
	],
	"customDatasources": {
		"wrangler-compatibility-date": {
			"defaultRegistryUrlTemplate": "https://registry.npmjs.org/miniflare",
			"transformTemplates": [
				"( \t\t\t\t\t\t$latest := $lookup(versions, `dist-tags`.latest); \t\t\t\t\t\t$transform_version_to_date := \t\t\t\t\t\t\t\t/* use latest major version */ \t\t\t\t\t\t\t\t$match(?, /^4.([0-9]{4})([0-9]{2})([0-9]{2}).[0-9]+$/) \t\t\t\t\t\t\t\t\t\t~> $lookup(?, \"groups\") \t\t\t\t\t\t\t\t\t\t~> $join(?, \"-\"); \t\t\t\t\t\t{ \t\t\t\t\t\t\t\t\"tags\": $each(`dist-tags`, function($version, $key) { \t\t\t\t\t\t\t\t\t\t{ \t\t\t\t\t\t\t\t\t\t\t\t$key: $transform_version_to_date($version) \t\t\t\t\t\t\t\t\t\t} \t\t\t\t\t\t\t\t}) ~> $merge(), \t\t\t\t\t\t\t\t\"homepage\": $exists(homepage) ? homepage : $latest.homepage, \t\t\t\t\t\t\t\t\"sourceUrl\": $exists(repository.url) ? repository.url : $latest.repository.url, \t\t\t\t\t\t\t\t\"releases\": $each(versions, function($data, $version) { \t\t\t\t\t\t\t\t\t\t{ \t\t\t\t\t\t\t\t\t\t\t\t\"version\": $transform_version_to_date($version), \t\t\t\t\t\t\t\t\t\t\t\t\"gitRef\": $data.gitHead, \t\t\t\t\t\t\t\t\t\t\t\t\"releaseTimestamp\": $lookup(time, $version), \t\t\t\t\t\t\t\t\t\t\t\t\"sourceUrl\": $data.repository.url != repository.url ? $data.repository.url \t\t\t\t\t\t\t\t\t\t} \t\t\t\t\t\t\t\t}) ~> $filter(function($data) { \t\t\t\t\t\t\t\t\t\t$exists($data.version) \t\t\t\t\t\t\t\t}) ~> $sort(function($left, $right) { \t\t\t\t\t\t\t\t\t\t/* sort from latest to oldest */ \t\t\t\t\t\t\t\t\t\t$toMillis($left.releaseTimestamp) < $toMillis($right.releaseTimestamp) \t\t\t\t\t\t\t\t}) ~> $reduce(function($acc, $data) { \t\t\t\t\t\t\t\t\t\t/* only keep the latest version for each date */ \t\t\t\t\t\t\t\t\t\t$lookup($acc, $data.version) ? $acc : $merge([$acc, { $data.version: $data }]) \t\t\t\t\t\t\t\t}, []) ~> $each(function($data) { $data }) \t\t\t\t\t\t\t\t\t/* sort from oldest to latest */ \t\t\t\t\t\t\t\t\t~> $reverse() \t\t\t\t\t\t} \t\t\t\t)"
			]
		}
	},
	"packageRules": [
		{
			"matchDepNames": [
				"node"
			],
			"ignoreUnstable": false
		},
		{
			"matchDepNames": [
				"mise"
			],
			"automerge": true
		},
		{
			"matchCategories": [
				"ci"
			],
			"semanticCommitType": "ci"
		},
		{
			"matchFileNames": [
				"mise.toml"
			],
			"addLabels": [
				"mise"
			]
		},
		{
			"matchManagers": [
				"custom.jsonata"
			],
			"matchDepNames": [
				"cargo-binstall"
			],
			"overrideDatasource": "crate"
		},
		{
			"matchManagers": [
				"custom.jsonata"
			],
			"matchDepNames": [
				"taplo"
			],
			"overrideDatasource": "github-releases",
			"overridePackageName": "tamasfe/taplo"
		},
		{
			"matchManagers": [
				"custom.jsonata"
			],
			"matchDepNames": [
				"biome"
			],
			"overrideDatasource": "github-releases",
			"overridePackageName": "biomejs/biome",
			"extractVersion": "^@biomejs/biome@(?<version>.+)"
		},
		{
			"matchManagers": [
				"custom.jsonata"
			],
			"matchDepNames": [
				"lychee"
			],
			"overrideDatasource": "github-releases",
			"overridePackageName": "lycheeverse/lychee",
			"extractVersion": "^lychee-v(?<version>.+)"
		},
		{
			"matchManagers": [
				"custom.jsonata"
			],
			"matchDepNames": [
				"ghalint"
			],
			"overrideDatasource": "github-releases",
			"overridePackageName": "suzuki-shunsuke/ghalint",
			"extractVersion": "^v(?<version>.+)"
		},
		{
			"matchManagers": [
				"custom.jsonata"
			],
			"matchDepNames": [
				"pinact"
			],
			"overrideDatasource": "github-releases",
			"overridePackageName": "suzuki-shunsuke/pinact",
			"extractVersion": "^v(?<version>.+)"
		},
		{
			"matchManagers": [
				"custom.jsonata"
			],
			"matchDepNames": [
				"jc"
			],
			"overrideDatasource": "github-releases",
			"overridePackageName": "kellyjonbrazil/jc",
			"extractVersion": "^v(?<version>.+)"
		},
		{
			"matchManagers": [
				"custom.jsonata"
			],
			"matchDepNames": [
				"powershell"
			],
			"overrideDatasource": "github-releases",
			"overridePackageName": "PowerShell/PowerShell",
			"extractVersion": "^v(?<version>.+)"
		},
		{
			"matchDepNames": [
				"biome",
				"@biomejs/biome"
			],
			"groupName": "biome"
		}
	]
}