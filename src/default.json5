{
	// ref: https://docs.renovatebot.com/configuration-options/
	$schema: "https://docs.renovatebot.com/renovate-schema.json",
	extends: [
		"config:best-practices",
		":pinVersions",
		// cspell:ignore automerge
		":automergeMinor",
		":automergeDigest",
		":prHourlyLimitNone",
		":prConcurrentLimitNone",
		"customManagers:biomeVersions",
	],
	ignorePresets: [":ignoreModulesAndTests"],
	bun: {
		ignorePaths: [
			// ignorePaths is not merged
			// ref: https://docs.renovatebot.com/configuration-options/#ignorepaths
			"**/node_modules/**",
			// ignore bun.lockb
			// an empty bun.lockb is required to Bun detected by Cloudflare Workers/Pages Builds
			"**/bun.lockb",
		],
	},
	labels: [
		"dependencies",
		"{{#unless (or (equals manager 'regex') (equals manager 'jsonata'))}}{{manager}}{{/unless}}",
	],
	// ref: https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
	customManagers: [
		// renovate does not support tools not listed
		// ref: https://docs.renovatebot.com/modules/manager/mise/#additional-information
		{
			customType: "jsonata",
			description: "Updates mise tools (shorthands)",
			managerFilePatterns: [
				"(^|/)\\.?mise\\.toml$",
				"(^|/)\\.?mise/config\\.toml$",
			],
			fileFormat: "toml",
			// to avoid renovate config validator error
			// Renovate throws "Missing datasource!" warnings but still works
			datasourceTemplate: "undefined",
			matchStrings: [
				'$each($.tools, function($v, $k) { $contains($k, ":") ? undefined : { "depName": $k, "currentValue": $v } })',
			],
		},
		// renovate does not support backends
		// ref: https://github.com/renovatebot/renovate/issues/30387
		{
			customType: "regex",
			description: "Updates mise tools (full)",
			managerFilePatterns: [
				"(^|/)\\.?mise\\.toml$",
				"(^|/)\\.?mise/config\\.toml$",
			],
			// supports only cargo, npm, ubi, and aqua backends
			datasourceTemplate: "{{#if (equals datasource 'cargo')}}crate{{else}}\
{{#if (or (equals datasource 'ubi') (equals datasource 'aqua'))}}github-releases{{else}}{{datasource}}{{/if}}{{/if}}",
			currentValueTemplate: "{{{replace '^v(.+)$' '$1' currentValue}}}",
			extractVersionTemplate: "^v?(?<version>.+)",
			matchStrings: [
				// test: https://regex101.com/r/K6Imdx
				"['\"](?<datasource>.+?):(?<depName>.+?)['\"] *= *['\"][^\\d.]*(?<currentValue>.+?)['\"]",
			],
		},
		{
			customType: "jsonata",
			description: "Updates min_version in mise config",
			managerFilePatterns: [
				"(^|/)\\.?mise\\.toml$",
				"(^|/)\\.?mise/config\\.toml$",
			],
			fileFormat: "toml",
			datasourceTemplate: "github-releases",
			depNameTemplate: "mise",
			packageNameTemplate: "jdx/mise",
			matchStrings: ['{ "currentValue": $.min_version }'],
		},
		{
			customType: "jsonata",
			description: "Updates mise versions in GitHub Actions",
			managerFilePatterns: ["^\\.github/workflows/.+\\.yml$"],
			fileFormat: "yaml",
			datasourceTemplate: "github-releases",
			depNameTemplate: "mise",
			packageNameTemplate: "jdx/mise",
			matchStrings: [
				'$.jobs.*.steps[$substringBefore(uses, "@") = "jdx/mise-action"].with.version.{ "currentValue": $ }',
			],
		},
	],
	packageRules: [
		// use unstable versions
		{
			// odd major versions are unstable but use the latest
			// ref: https://docs.renovatebot.com/modules/versioning/node/
			matchDepNames: ["node"],
			ignoreUnstable: false,
		},
		// automerge
		{
			matchDepNames: ["mise"],
			// cspell:ignore calver
			// mise uses Calver, so allow automerge for all versions
			// ref: https://mise.jdx.dev/roadmap.html#versioning
			automerge: true,
		},
		// set semantic commit types
		{
			matchCategories: ["ci"],
			semanticCommitType: "ci",
		},
		// add labels
		{
			matchFileNames: ["mise.toml"],
			addLabels: ["mise"],
		},
		// mise tools
		{
			matchManagers: ["custom.regex"],
			// cspell:ignore binstall
			matchDepNames: ["cargo-binstall"],
			overrideDatasource: "crate",
		},
		{
			matchManagers: ["custom.regex"],
			matchDepNames: ["taplo"],
			overrideDatasource: "github-releases",
			// cspell:ignore tamasfe
			overridePackageName: "tamasfe/taplo",
		},
		{
			matchManagers: ["custom.regex"],
			matchDepNames: ["biome"],
			overrideDatasource: "github-releases",
			overridePackageName: "biomejs/biome",
			extractVersion: "^cli/v(?<version>.+)",
		},
		{
			matchManagers: ["custom.regex"],
			matchDepNames: ["lychee"],
			overrideDatasource: "github-releases",
			// cspell:ignore lycheeverse
			overridePackageName: "lycheeverse/lychee",
			extractVersion: "^lychee-v(?<version>.+)",
		},
		{
			matchManagers: ["custom.regex"],
			matchDepNames: ["ghalint"],
			overrideDatasource: "github-releases",
			// cspell:ignore shunsuke
			overridePackageName: "suzuki-shunsuke/ghalint",
			currentValueTemplate: "{{{replace '^v(.+)$' '$1' currentValue}}}",
			extractVersionTemplate: "^v?(?<version>.+)",
		},
		{
			matchManagers: ["custom.regex"],
			matchDepNames: ["pinact"],
			overrideDatasource: "github-releases",
			overridePackageName: "suzuki-shunsuke/pinact",
			currentValueTemplate: "{{{replace '^v(.+)$' '$1' currentValue}}}",
			extractVersionTemplate: "^v?(?<version>.+)",
		},
	],
}
